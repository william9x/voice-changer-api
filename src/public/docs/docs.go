// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/infer": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InferenceController"
                ],
                "summary": "Change voice of an audio file to target voice",
                "operationId": "create-inference",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Source voice",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "youtube"
                        ],
                        "type": "string",
                        "default": "youtube",
                        "description": "Source provider",
                        "name": "source_provider",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Source URL",
                        "name": "source_url",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "trump",
                        "description": "Target voice",
                        "name": "model",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "vc:rvc",
                            "aic"
                        ],
                        "type": "string",
                        "default": "vc:rvc",
                        "description": "Task's type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maximum": 12,
                        "minimum": -12,
                        "type": "integer",
                        "default": 0,
                        "description": "Transpose",
                        "name": "transpose",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/resources.Infer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/infer/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InferenceController"
                ],
                "summary": "Get status of an inference task",
                "operationId": "get-inference",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/resources.Inference"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/models": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ModelController"
                ],
                "summary": "Get list supported models",
                "operationId": "get-models",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/resources.Model"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "resources.Infer": {
            "type": "object",
            "properties": {
                "deadline": {
                    "description": "Deadline for completing the task",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "max_retry": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "status": {
                    "description": "Status of the task. Values: active, pending, scheduled, retry, archived, completed",
                    "type": "string"
                },
                "task_id": {
                    "description": "@Deprecated",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "resources.Inference": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "enqueued_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_err": {
                    "type": "string"
                },
                "last_failed_at": {
                    "type": "string"
                },
                "max_retry": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "queue": {
                    "type": "string"
                },
                "retried": {
                    "type": "integer"
                },
                "src_file_url": {
                    "type": "string"
                },
                "status": {
                    "description": "Status of the task. Values: active, pending, scheduled, retry, archived, completed",
                    "type": "string"
                },
                "target_file_url": {
                    "type": "string"
                },
                "task_id": {
                    "description": "@Deprecated",
                    "type": "string"
                },
                "task_status": {
                    "type": "string"
                },
                "transpose": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "resources.Model": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.Meta": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "$ref": "#/definitions/response.Meta"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Voice Changer API Public",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
